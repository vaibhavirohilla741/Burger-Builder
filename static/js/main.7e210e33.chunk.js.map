{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxillary/Auxillary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axiosOrders.js","axios-orders.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igkey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngredients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","fetchedOrders","key","push","orders","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","AuthData","building","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredient","fetchIngredientsFailed","reducer","newOrder","purchaseBurgerStart","fetchOrderSuccess","purchaseInit","fetchOrderStart","fetchOrderFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e210e33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1f2fF\",\"BreadTop\":\"BurgerIngredient_BreadTop__3ad2H\",\"Seeds1\":\"BurgerIngredient_Seeds1__2pMtE\",\"Seeds2\":\"BurgerIngredient_Seeds2__3vusd\",\"Meat\":\"BurgerIngredient_Meat__1CL9F\",\"Cheese\":\"BurgerIngredient_Cheese__3P6eT\",\"Salad\":\"BurgerIngredient_Salad__17H7l\",\"Bacon\":\"BurgerIngredient_Bacon__1xBXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__rZjhj\",\"Open\":\"SideDrawer_Open__110Av\",\"Close\":\"SideDrawer_Close__9xh7c\",\"Logo\":\"SideDrawer_Logo__3wTfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1YVOC\",\"Label\":\"BuildControl_Label__Fdc28\",\"Less\":\"BuildControl_Less__3q2UX\",\"More\":\"BuildControl_More__ZGw05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2t0OW\",\"Label\":\"Input_Label__1Waqi\",\"InputElement\":\"Input_InputElement__3rtYz\",\"Invalid\":\"Input_Invalid__qmryn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2JkhL\",\"Logo\":\"Toolbar_Logo__GYlQJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1d9tB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__nhyoS\",\"active\":\"NavigationItem_active__2KacI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__V4IR_\",\"OrderButton\":\"BuildControls_OrderButton__1KTyI\",\"enable\":\"BuildControls_enable__3fBNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1X_0c\",\"Success\":\"Button_Success__28DSl\",\"Danger\":\"Button_Danger__2XPqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3UL16\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3fxI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2RWhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__28aF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3vvap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__200a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2j-vb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3YnOT\",\"load2\":\"Spinner_load2__DzFO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3bL9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3qKH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3jpYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthData\":\"Auth_AuthData__3Op7D\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n       {props.isAuthenticated ?<NavigationItem link=\"/orders\">Orders</NavigationItem>:null}\r\n       {!props.isAuthenticated \r\n       ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n       : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\n\r\nconst sideDrawer = ( props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport Aux from '../Auxillary/Auxillary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                isAuth={this.props.isAuthenticated}\r\n                drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =  state => {\r\n    return{\r\n        isAuthenticated:state.auth.token!==null\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igkey => {\r\n        return [...Array(props.ingredients[igkey])]\r\n        .map((_ , i) => { return < BurgerIngredient key={igkey +i} type={igkey} />\r\n        });\r\n    })\r\n\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n\r\n    },[]);\r\n    \r\n\r\n    if(transformedIngredients.length===0) {\r\n        transformedIngredients=<p>Start Adding Ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth?\"ORDER NOW\":\"SignUp To Order\"}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxillary/Auxillary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummary] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys( this.props.ingredients )\r\n            .map( igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li> );\r\n            } );\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxillary/Auxillary';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState( { error: null } );\r\n                return req;\r\n            } );\r\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\r\n                this.setState( { error: error } );\r\n            } );\r\n        }\r\n\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject( this.reqInterceptor );\r\n            axios.interceptors.response.eject( this.resInterceptor );\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState( { error: null } );\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://burger-builder-a1c29-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-builder-a1c29-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED ='FETCH_INGREDIENTS_FAILED'\r\n\r\nexport const PURCHASE_BURGER_SUCCESS =\"PURCHASE_BURGER_SUCCESS\"\r\nexport const PURCHASE_BURGER_FAIL =\"PURCHASE_BURGER_FAIL\" \r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\"\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\"\r\n\r\nexport const AUTH_START = \"AUTH_START\"\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\r\nexport const AUTH_FAIL = \"AUTH_FAIL\"\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\r\n\r\nexport const SET_AUTH_REDIRECT_PATH= \"SET_AUTH_REDIRECT_PATH\"","import axios from '../../axios-orders';\r\nimport * as actionTypes from './actionTypes';\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\nexport const setIngredients = (ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\nexport const fetchIngredientsFailed =() => {\r\n        return {\r\n            type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n        }\r\n    }\r\n\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get( 'https://burger-builder-a1c29-default-rtdb.firebaseio.com/ingredients.json' )\r\n            .then( response => {\r\n                console.log(response);\r\n                dispatch(setIngredients(response.data))\r\n           } )\r\n          .catch( error => {\r\n            dispatch(fetchIngredientsFailed())\r\n            console.log(error);\r\n         } )\r\n\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBukv3i_63Qtb0lKWUAWzGD8xeFlKBlorE';\r\n        if (!isSignup) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBukv3i_63Qtb0lKWUAWzGD8xeFlKBlorE';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxillary/Auxillary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axiosOrders';\r\nimport * as actions from \"../../store/actions/index\"\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false,\r\n       \r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n        \r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState( { purchasing: true } );\r\n\r\n        }\r\n        else{\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase()\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price}\r\n                        isAuth={this.props.isAuthenticated} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        \r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error:state.burgerBuilder.error,\r\n        isAuthenticated:state.auth.token!==null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport axios from \"../../../axios-orders\"\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\"\r\nimport * as actions from \"../../../store/actions/index\"\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId:this.props.userId\r\n        }\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token:state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler((ContactData),axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from \"../../store/actions/index\"\r\nclass Checkout extends Component {\r\n   \r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace( '/checkout/contact-data' );\r\n    }\r\n\r\n    render () {\r\n        let summary=<Redirect to=\"/\"/>\r\n        \r\n        if(this.props.ings) {\r\n            const purchasedRedirect=this.props.purchased ? <Redirect to =\"/\"/>:null;\r\n\r\n            summary=(\r\n                \r\n            <div>\r\n                {purchasedRedirect}\r\n            <CheckoutSummary\r\n                ingredients={this.props.ings}\r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler} />\r\n            <Route \r\n                path={this.props.match.path + '/contact-data'} \r\n                component={ContactData} />\r\n        </div>\r\n                \r\n            )\r\n        }\r\n        return summary\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token,this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n    return(\r\n        <div>\r\n            {orders}\r\n        </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token:state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    isSignup: true,\r\n  };\r\n  componentDidMount(){\r\n    if(!this.props.buildingBurger && this.props.authRedirectPath!==\"/\"){\r\n      this.props.onSetAuthRedirectPath()\r\n    }\r\n  }\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n      const pattern =\r\n        /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: this.checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSignup\r\n    );\r\n  };\r\n  switchAuthModeHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { isSignup: !prevState.isSignup };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n\r\n    let form = formElementsArray.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n\r\n    if(this.props.loading){\r\n        form=<Spinner/>\r\n    }\r\n\r\n    let errorMessage = null;\r\n    if(this.props.error) {\r\n      errorMessage=(\r\n        <p> {this.props.error.message}</p>\r\n      )\r\n    }\r\n    let authRedirect=null\r\n    if(this.props.isAuthenticated){\r\n      authRedirect=<Redirect to={this.props.authRedirectPath}/>\r\n\r\n    }\r\n    return (\r\n      <div className={classes.AuthData}>\r\n        {authRedirect}\r\n        {errorMessage}\r\n        <form onSubmit={this.submitHandler}>\r\n          {form}\r\n          <Button btnType=\"Success\">SUBMIT</Button>\r\n        </form>\r\n        <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">\r\n          {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return{\r\n    loading:state.auth.loading,\r\n    error:state.auth.error,\r\n    isAuthenticated:state.auth.token!==null,\r\n    buildingBurger:state.burgerBuilder.building,\r\n    authRedirectPath:state.auth.authRedirectPath\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from 'react'\r\nimport * as actions from \"../../../store/actions/index\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nexport class Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n    render() {\r\n        return <Redirect to=\"/\"/>\r\n     }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)( Logout)\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch , withRouter, Redirect} from 'react-router-dom';\r\nimport { connect} from 'react-redux'\r\n\r\nimport Layout from './hoc/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index'\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    this.props.onTryAutoSignup();\r\n  }\r\n  render () {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\"/>\r\n      </Switch>\r\n      \r\n\r\n    )\r\n    if(this.props.isAuthenticated)\r\n    {\r\n      routes = (\r\n        <Switch>\r\n        <Route path=\"/checkout\" component={Checkout} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\"/>\r\n      </Switch>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <Layout>\r\n         {routes}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token!==null\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: ()=> dispatch(actions.authCheckState())\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building:false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const updatedIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n    \r\n  };\r\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n  const updatedState = {\r\n    ingredients: updatedIngredients,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building:true\r\n  };\r\n  return updateObject(state, updatedState);\r\n};\r\nconst removeIngredient = (state, action) => {\r\n  const updatedIng = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n  };\r\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n  const updatedSt = {\r\n    ingredients: updatedIngs,\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building:true\r\n  };\r\n  return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredient = (state, action) => {\r\n  return updateObject(state, {\r\n    ingredients: action.ingredients,\r\n    error: false,\r\n    totalPrice: 4,\r\n    building:false\r\n  });\r\n};\r\nconst fetchIngredientsFailed = (state, action) => {\r\n  return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT:\r\n      return addIngredient(state, action);\r\n\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return removeIngredient(state, action);\r\n\r\n    case actionTypes.SET_INGREDIENTS:\r\n      return setIngredient(state, action);\r\n\r\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n      return fetchIngredientsFailed(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n  const newOrder = {\r\n    ...action.orderData,\r\n    id: action.orderId,\r\n  };\r\n  return updateObject(state, {\r\n    loading: false,\r\n    purchased: true,\r\n    orders: state.orders.concat(newOrder),\r\n  });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n  };\r\n};\r\nconst purchaseBurgerStart = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n  };\r\n};\r\nconst fetchOrderSuccess = (state, action) => {\r\n  return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\nconst purchaseInit = (state, action) => {\r\n  return updateObject(state, { purchased: false });\r\n};\r\nconst fetchOrderStart = (state, action) => {\r\n  return updateObject(state, { loading: true });\r\n};\r\nconst fetchOrderFail = (state, action) => {\r\n  return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n      return purchaseBurgerSuccess(state, action);\r\n\r\n    case actionTypes.PURCHASE_BURGER_FAIL:\r\n      return purchaseBurgerFail(state, action);\r\n\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n      return purchaseBurgerStart(state, action);\r\n    case actionTypes.PURCHASE_INIT:\r\n      return purchaseInit(state, action);\r\n\r\n    case actionTypes.FETCH_ORDERS_START:\r\n      return fetchOrderStart(state, action);\r\n\r\n    case actionTypes.FETCH_ORDERS_SUCCESS:\r\n      return fetchOrderSuccess(state, action);\r\n\r\n    case actionTypes.FETCH_ORDERS_FAIL:\r\n      return fetchOrderFail(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject( state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     } );\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render( app, document.getElementById( 'root' ) );\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}